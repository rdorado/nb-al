from sklearn.datasets import fetch_20newsgroups
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn import mixture

import numpy as np


categories = ['alt.atheism', 'soc.religion.christian', 'comp.graphics', 'sci.med']
twenty_train = fetch_20newsgroups(subset='train', categories=categories, shuffle=True, random_state=42)
twenty_test = fetch_20newsgroups(subset='test',categories=categories, shuffle=True, random_state=42)      

train_data = twenty_train.data
train_targets = twenty_train.target
test_data = twenty_test.data
test_targets = twenty_test.target


count_vect = CountVectorizer()
X_train = count_vect.fit_transform(train_data)


gmm = mixture.DPGMM(n_components=2, covariance_type='full')
gmm.fit( X_train.toarray() )

print gmm.means_ 


#clf = MultinomialNB().fit(X_train, train_targets)   

#X_new = count_vect.transform(test_data)
#predicted = clf.predict(X_new)
#print 'Accuracy: ',np.mean(predicted == test_targets) 
